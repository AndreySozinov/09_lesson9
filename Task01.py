# –°–æ–∑–¥–∞–π—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é-–∑–∞–º—ã–∫–∞–Ω–∏–µ, –∫–æ—Ç–æ—Ä–∞—è –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç –¥–≤–∞ —Ü–µ–ª—ã—Ö —á–∏—Å–ª–∞:
# ‚óã –æ—Ç 1 –¥–æ 100 –¥–ª—è –∑–∞–≥–∞–¥—ã–≤–∞–Ω–∏—è,
# ‚óã –æ—Ç 1 –¥–æ 10 –¥–ª—è –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –ø–æ–ø—ã—Ç–æ–∫
# üìå –§—É–Ω–∫—Ü–∏—è –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è —á–µ—Ä–µ–∑ –∫–æ–Ω—Å–æ–ª—å –ø—Ä–æ—Å–∏—Ç
# —É–≥–∞–¥–∞—Ç—å –∑–∞–≥–∞–¥–∞–Ω–Ω–æ–µ —á–∏—Å–ª–æ –∑–∞ —É–∫–∞–∑–∞–Ω–Ω–æ–µ —á–∏—Å–ª–æ –ø–æ–ø—ã—Ç–æ–∫.
from typing import Callable
from random import randint as r
__all__ = ['func_closure']


def func_closure(border: int = 100, tries: int = 10) -> Callable[[], None]:
    def guessing():
        success = False
        number = r(1, border)
        for i in range(tries):
            one_try = int(input(f'–£–≥–∞–¥–∞–π —á–∏—Å–ª–æ. –û—Å—Ç–∞–ª–æ—Å—å –ø–æ–ø—ã—Ç–æ–∫: {tries - i}\n'))
            if one_try < number:
                print('–°–ª–∏—à–∫–æ–º –º–∞–ª–æ.')
            elif one_try > number:
                print('–°–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ.')
            else:
                print(f'–£–≥–∞–¥–∞–ª –∑–∞ {i + 1} –ø–æ–ø—ã—Ç–æ–∫!')
                success = True
                break
        if not success:
            print(f'–°–æ–∂–∞–ª–µ—é, –ø–æ–ø—ã—Ç–∫–∏ –∑–∞–∫–æ–Ω—á–∏–ª–∏—Å—å. –ó–∞–≥–∞–¥–∞–Ω–Ω–æ–µ —á–∏—Å–ª–æ: {number}')
    return guessing


if __name__ == '__main__':
    game1 = func_closure()
    game1()
